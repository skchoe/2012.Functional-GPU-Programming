#lang racket 
(provide prog) 
(define prog '(let  (v63457 0)
(let  (v63458 0)
(let  (v63459 8)
(let  (v63460 2)
(let  (v63461 2)
(let  (v63462 5)
(let  (v63463 1)
(let  (v63464 7)
(let  (v63465 3)
(let  (v63466 4)
(let (v63467 6)
(let (v63468 0)
(let (v63469 (lambda (p63470)  p63470))
(let (v63471 (cons v63461 v63461))
(let (v63472 (car v63471))
(let (v63473 (cdr v63471))
(let (v63474 (if v63468 v63465 v63464))
(let (v63475 (apply v63469 v63465))
(let (v63476 v63475)
(let   (v63477 (car v63471))
(let   (v63478 (car v63471))
(let   (v63479 (cons v63468 v63467))
(let   (v63480 (let   (v63481 (if v63468 (let   (v63482 (lambda (p63483) (let   (v63484 (cons v63468 v63468))
(let (v63485 v63467 ) 
v63485 ) ) ))
(let (v63486 v63465 ) 
v63460 ) )  v63463 ))
(let (v63487 v63458 ) 
v63460 ) ) )
(let (v63488 v63462 ) 
v63467 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )